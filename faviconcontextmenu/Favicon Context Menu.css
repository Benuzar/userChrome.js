@namespace url(http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul);
@-moz-document url(chrome://browser/content/browser.xul) {
  .urlbar-textbox-container {
    -moz-binding: url("data:text/xml;charset=UTF-8;base64,");
  }
}
